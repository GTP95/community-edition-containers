name: pygluu compose
# This builds, packages and tests pyglu-compose
on: [push]
  #push:
    # Sequence of patterns matched against refs/tags
    #tags:
      #- 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]

    steps:
    - name: Checkout code on 4.1
      uses: actions/checkout@4.1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        sudo apt-get update
        sudo apt-get install ruby

    - name: Lint with flake8
      run: |
        pip3 install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Checkout code on 4.1
      uses: actions/checkout@4.1

    - name: Build Zipapp
      run: |
        sudo apt-get update
        sudo apt-get install build-essential
        pip3 install shiv
        mkdir /home/runner/work/test
        cp -r ./pygluu-compose/* /home/runner/work/test/
        cd /home/runner/work/test/
        make zipapp

    - name: Get version
      id: get_version
      run: |
        cd ./pygluu-compose/pygluu/compose
        echo "::set-output name=version::$(python3 -c 'import __init__ ; print(__init__.__version__)')"
        echo "::set-output name=pversion::$(python3 -c 'import __init__ ; print(__init__.__previous_version__)')"

    - name: Test Pygluu Compose
      id: test_compose
      run: |
        cd /home/runner/work/test/
        ip=$(ifconfig eth0 | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1')
        echo -e "\nHOST_IP=""'$ip'" >> settings.py
        ./pygluu-compose.pyz up

    - name: Install Changelog autogenerator
      run: |
        cd /home/runner/work/test/
        sudo gem install github_changelog_generator
        github_changelog_generator --user moabu --project pygluu-compose --date-format "%m/%d/%Y" --header-label "# Release Notes" --output release_notes.md --token ${{ secrets.token }}
        sed -i '$ d' release_notes.md
        github_changelog_generator --user moabu --project pygluu-compose --date-format "%m/%d/%Y" --token ${{ secrets.token }}
        sed -i '$ d' CHANGELOG.md

    - name: Read CHANGELOG
      id: changelog
      run: |
        release_notes=$(cat /home/runner/work/test/release_notes.md)
        release_notes="${release_notes//'%'/'%25'}"
        release_notes="${release_notes//$'\n'/'%0A'}"
        release_notes="${release_notes//$'\r'/'%0D'}"
        echo "::set-output name=body::$release_notes"
        cp /home/runner/work/test/CHANGELOG.md .

    - name: Create Release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: v${{ steps.get_version.outputs.version }}
        release_name: v${{ steps.get_version.outputs.version }}
        body: |
          ${{ steps.changelog.outputs.body }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@4.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: /home/runner/work/test/pygluu-compose.pyz
        asset_name: pygluu-compose.pyz
        asset_content_type: application/pyz

    - name: Push CHANGELOG.md to 4.1
      uses: mikeal/publish-to-github-action@4.1
      env:
        GITHUB_TOKEN: ${{ secrets.token }}
